# Generated by Django 2.2.12 on 2020-07-01 21:10

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fontawesome.fields
import geonode.ms.models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('maps', '__first__'),
        ('blog', '0001_initial'),
        ('groups', '0034_auto_20200512_1431'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripcion')),
                ('content_modal', ckeditor.fields.RichTextField(blank=True, help_text='Aquí puedes responder tu pregunta', null=True, verbose_name='Contenido')),
                ('image', models.ImageField(blank=True, help_text='Imagen', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Imagen')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('creation_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Microsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Nombre')),
                ('subtitle', models.CharField(blank=True, max_length=200, verbose_name='Sub-Titulo')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Descripcion')),
                ('url_name', models.CharField(help_text='El slug no puede tener espacios, caracteres especiales, ni arrobas', max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='Complementa la URL del sitio (http://idegeo.centrogeo.org.mx/ms/)')),
                ('color', models.IntegerField(blank=True, default=0, null=True, verbose_name='Color')),
                ('thematic', models.IntegerField(blank=True, default=0, null=True, verbose_name='Thematizador')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Imagen de portada')),
                ('image_1', models.ImageField(blank=True, default=None, help_text='Este logo va en la parte superior izquierda del micro sitio (max 130x80 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Logo 1')),
                ('image_2', models.ImageField(blank=True, help_text='Este logo va en la parte superior derecha del micro sitio (max 130x80 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Logo 2')),
                ('image_3', models.ImageField(blank=True, help_text='Este logo va en la parte inferior izquierda del micro sitio (max 400x100 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Logo 3')),
                ('image_4', models.ImageField(blank=True, help_text='Este logo es para vizualizarlo en el tipo de vizualizador red', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Logo Red')),
                ('public', models.BooleanField(blank=True, verbose_name='Publicar')),
                ('header', models.TextField(blank=True, help_text='Aquí puedes personalizar el encabezado de la página', null=True, verbose_name='Encabezado')),
                ('viewer', models.TextField(blank=True, help_text='Aquí puedes personalizar el visualizador', null=True, verbose_name='Visualizador')),
                ('footer', models.TextField(blank=True, help_text='Aquí puedes personalizar el pie de página', null=True, verbose_name='Pie de página')),
                ('gray_colors', models.BooleanField(default=False, verbose_name='Marco en gris')),
                ('size', models.CharField(blank=True, choices=[('s', 'Small (150x150)'), ('m', 'Medium (250x250)'), ('l', 'Large (250x150)'), ('x', 'XLarge (497x279)'), ('h', 'Horizontal (851x315)'), ('v', 'Vertical (1080x608)')], default='m', max_length=250, null=True, verbose_name='Tipo')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.GroupProfile', verbose_name='Grupo')),
                ('topic', models.ManyToManyField(blank=True, help_text='Seleccione las tematicas.', null=True, to='blog.Topic', verbose_name='Tematicas')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Nombre')),
                ('url', models.URLField(blank=True, help_text='Solo para ligar a sitios externos', null=True, verbose_name='URL externa')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Contenido')),
                ('icon', fontawesome.fields.IconField(blank=True, max_length=60)),
                ('stack_order', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('microsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name='Micrositio')),
                ('parent_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ms.Section', verbose_name='Section')),
            ],
        ),
        migrations.CreateModel(
            name='Narrative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('slug', models.SlugField(blank=True)),
                ('author', models.CharField(max_length=100, verbose_name='Autor')),
                ('description', models.CharField(max_length=140, verbose_name='Descripcion')),
                ('url', models.URLField(blank=True, help_text='Solo para ligar a sitios externos', null=True, verbose_name='URL externa')),
                ('narrative', ckeditor.fields.RichTextField(blank=True, help_text='Aquí puedes crear tu narrativa que se asociará a un micrositio o categoria', null=True, verbose_name='Contenido')),
                ('image', models.ImageField(blank=True, help_text='Portada de la narrativa', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name='Portada')),
                ('public', models.BooleanField(blank=True, verbose_name='Publicar')),
                ('draft', models.BooleanField(blank=True, verbose_name='Draft')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, help_text='Elige una categoria para que se asocie a tu narrativa.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ms.Category', verbose_name='Asociar a una categoria')),
                ('maps', models.ManyToManyField(blank=True, null=True, related_name='ms_narratives_maps', to='maps.Map', verbose_name='Mapas relacionados')),
                ('microsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name='Micrositio')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='category',
            name='microsite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name='Micrositio'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ms.Category', verbose_name='Category'),
        ),
    ]
